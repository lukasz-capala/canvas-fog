#!/usr/bin/env node
'use strict';

require('colors');

var _debounce = require('debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _nodeWatch = require('node-watch');

var _nodeWatch2 = _interopRequireDefault(_nodeWatch);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _shelljs = require('shelljs');

var _shelljs2 = _interopRequireDefault(_shelljs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cwd = process.cwd();
var config = require(_path2.default.join(cwd, 'package.json'));

Object.keys(config.watch).forEach(function (pattern) {
  (0, _glob2.default)(pattern, { cwd: cwd }, function (err, files) {
    if (err) {
      console.log(err.bold.red);
    } else {
      console.log(('Watching ' + files.length + ' files matching \'' + pattern + '\'...').bold);
      start(config.watch[pattern], config.scripts);
    }

    (0, _nodeWatch2.default)(files, (0, _debounce2.default)(function (filename) {
      console.log('~'.blue, (filename + ' changed').gray);
      start(config.watch[pattern], config.scripts);
    }, 1000));
  });
});

function start(watchScripts, npmScripts) {
  watchScripts.forEach(function (scriptName) {
    if (npmScripts[scriptName]) {
      run(scriptName, npmScripts[scriptName], 'npm run ' + scriptName + ' -s');
    } else {
      console.log(('Error: \'' + scriptName + '\' not found in scripts').red, 'check your package.json'.gray);
    }
  });
}

function run(name, script, command) {
  _shelljs2.default.exec(command, { silent: true }, function (exitcode, output) {
    if (exitcode === 0) {
      console.log('✓'.green, name.bold, script.gray);
    } else {
      console.log('✗'.red, name.bold, script.gray);
      console.log(output.trim().gray);
    }
  });
}